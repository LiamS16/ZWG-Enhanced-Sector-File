; Ref: https://www.euroscope.hu/wp/built-in-functions/ for EuroScope's alias variables.

;*** Amendments and Comms ***
.s squawk $asquawk.
.ss squawk standby.
.sc squawk mode C.
.vr are you able to receive voice?
.wx the $1 weather is $metar($1)
.lvl for your direction of flight, would you prefer FL$1 or FL$2?
.clvl roger. Check $1 for your final cruising altitude.
.c contact $radioname($1) on $freq($1).
.atis the $1 ATIS is currently $2.

;*** Approaches ***
.expi expect ILS runway $arrrwy approach.
.expv expect visual runway $arrrwy approach.
.expr expect RNAV runway $arrrwy approach.
.exp expect $1 runway $arrrwy approach.
.rwyis airport is at your $oclock($arr) at $dist($arr) miles, report runway in sight.
.ils turn $1 heading $2, cleared ILS runway $arrrwy approach.
.appr cleared $1, runway $arrrwy.

;*** Centre ***
.no sorry, I do not control $1. Please contact $radioname($2) on $freq($2).
.bye you are leaving my airspace to the $1, $2 Centre is offline, surveillance services terminated. Change to en-route frequencies.
.byecon you are leaving controlled airspace, surveillance services terminated. Change to en-route frequencies. Advise this frequency $1 miles from $2.
.star plan the $star arrival, runway $arrrwy.
.usa handoff, $1 miles from $uc($2) on a $squawk code, $aircraft at $calt.
.ri identified, $alt. Welcome aboard.

;*** Clearance Delivery ***
.clrd cleared to $arr airport via the $sid departure, flight planned route, depart runway $deprwy, squawk $asquawk.
.clrdthen cleared to $arr airport via the $sid departure, $2 then flight planned route, depart runway $deprwy, squawk $asquawk.
.clrdv roger, depart runway $deprwy, squawk $asquawk. Advise ready for taxi.
.nosid cleared to $arr airport, flight planned route, on departure, fly heading $1, climb $2, depart runway $deprwy, squawk $asquawk.
.nosidthen cleared to $arr airport via $1 then flight planned route, fly heading $2, climb $3, expect vectors, depart runway $deprwy, squawk $asquawk.
.rb readback correct. Pushback and start up is at your discretion. Call when ready for taxi.
.rbuc readback correct, time $time zulu, Winds $wind($dep), Altimeter is $altim($dep). Released for departure. Monitor local frequency, call this frequency once airborne.
.pdc PDC | $aircraft $dep | $type | $route | USE SID $sid | TRANSPONDER $asquawk | DEPARTURE RUNWAY $deprwy | DESTINATION $arr | CONTACT ATC WITH IDENTIFIER - $1 | - END -

;*** Departure ***
.dep identified, altitude indicates $alt, climb $temp.
.depfh identified, altitude indicates $alt, fly heading $1, climb $temp.
.depvfr identified, altitude indicates $alt, maintain VFR, not above $temp.
.depc identified, altitude indicates $alt, fly heading $1, climb $temp.

;*** Emergency ***
.emerg emergency has been acknowledged. How many souls on board, and how much fuel are you carrying?
.problem please confirm the problem?
.tellemerg we have an emergency aircraft inbound, you can expect some delay and holding.

;*** Pre-Takeoff Instructions ***
.hstfc continue holding short, traffic is a $1 on the runway.
.hsfinal continue holding short, traffic is a $1 on final. 
.lu line up and wait, runway $deprwy.

;*** Landing Instructions ***
.landnum number $1, wind $wind($arr), cleared to land runway $arrrwy.
.landwt caution wake turbulence, wind $wind($arr), cleared to land runway $arrrwy.
.land wind $wind($arr), cleared to land runway $arrrwy.
.gnd welcome to $arr, exit $1 when able, contact $radioname($2) on $freq($2).
.nognd welcome to $arr, taxi via $1.

;*** Pattern Entry Instructions ***
.pattern enter $1 for runway $arrrwy, wind $wind($arr), altimeter $altim($arr), report $1.

;*** Taxi and Takeoff ***
.taxi runway $deprwy, wind $wind($dep), altimeter $altim($dep), taxi via $1.
.toc when airborne, contact $radioname($1) on $freq($1), winds $wind($dep), cleared takeoff runway $deprwy.
.wind $wind($1)

;*** Traffic Control ***
.traf traffic is at your $oclock($1) o'clock and $dist($1) miles, $type($1) at $alt($1), report the traffic in sight.
.rs report your speed.
.red reduce speed $1 kts.
.redl reduce speed $1 kts or less.
.redm reduce speed to your minimum clean.
.redf reduce to final approach speed.
.unicom no further ATC available, monitor UNICOM on 122.80.

;*** Turns and Altitude ***
.tr turn right heading $1
.tl turn left heading $1
.cm climb $temp
.main maintain $1
.dct turn now, direct $1
.alt $1 altimeter $altim($1)
.ds descend, $temp
.vect vectors for the $1, turn $3 heading $4